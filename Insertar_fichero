man(ISO)                 Especificación de la función  insertar_fichero               man(ISO)

NOMBRE
       insertar_fichero - inserta un fichero, directorio o enlace symbolico en otro fichero con formato mypackzip
       
SINOPSIS
      #include "s_header.h"
      int insertar_fichero(char * file_mypackzip, char * file_dat, int index);

DESCRIPCIÓN

      La función insertar_fichero inserta el fichero, directorio o enlace symbolico file_dat en el fichero     
      file_mypackzip 
      con formato mypackzip.
      El registro (s_header) de la posición index se debe actualizar con la información de
      file_dat. 
      Si file_mypackzip no existe o está vacío, se debe crear el fichero file_mypackzip y 
      se añadirá file_dat en la posición correpondiente a index.
      Si el registro (s_header) correspondiente ya estaba ocupado, la función no debe
      modificar file_mypackzip y rettornará un códio de error (ver sección de errores).
      
      index debe ser un valor de 0 a NUM_HEADERS-1 donde NUM_HEADERS es en número máximo de 
      ficheros/registros que pueda llegar a contener un fichero de tipo mypackzip.
      El formato de file_mypackzip se describe en la estructura s_header (ver s_header.h). 
  
VALOR DE RETORNO
       Si todo funciona correctamente, insertar_fichero devolverá el índice del 
       s_header(posición) donde ha insertado file_dat (de 0 a NUM_HEADERS-1). 
       En caso contrario no actualizará/creará el fichero file_mypackzip y la función 
       retornará los errores indicados en el apartado de ERRORES.

MEJORAS OPCIONALES
       Si index es -1 file_dat se insertará en el primer s_header libre del archivo 
       file_mypackzip y retornará el índice correspondiente al s_header donde se ha
       insertado.


ERRORES
       E_OPEN1   (-1) 
           No se puede abrir o crear file_mypackzip.
       E_OPEN2   (-2) 
           No se puede abrir  fich_origen.
       E_POS1   (-3) 
           Número de index erroneo
       E_POS2  (-4) 
           index hare referencia a un s_header que ya contiene datos válidos.
       E_DESCO  (-99) 
           Otro tipo de errores 
       
NOTAS
       Nota1: El programa que utilice esta función , deberá informar por la salida 
              de error estándar un mensaje indicando el tipo de error.

      Ejemplo de utilización:
      Se supone que se utiliza compilación separada y el código (en lenguaje C) de la función
      insertar_fichero se encuentra en un fichero diferente. 
      En el ejemplo de uso, la función inserta el fichero "./fichero3.dat" en la  posición 5 
      del fichero "./ejemplo.mpz". 
      "ejemplo.mpz" deber ser un fichero con formato mypackzip.

      #include "s_header.h"
      extern int insertar_fichero(char * file_mypackzip, char * file_dat,  int index );
      ...
      unsigned int ret;
      
      n = insertar_fichero("./ejemplo.mpz", "./fichero3.dat", 5);
      if (n!=5) // Error
      {
          ....
      }
      ...

/**
* @file s_header.h
* @author   G.A.
* @date     16/02/2021
* @brief    Include file with struct s_header, struct s_info and s_mypack_header
* @details  A header file with the definition of struct s_header, struct s_info and 
*           s_mypack_headers of  mypackzip file format
*           +++++++++++++++++++++++
*           + struct s_header 0   +
*           +---------------------+
*           + struct s_header 1   +
*           +---------------------+
*           +        ...          +
*           +---------------------+
*           + struct s_header n-1 +
*           +++++++++++++++++++++++
*           +    Data File 0      +
*           +---------------------+
*           +    Data File 1      +
*           +---------------------+
*           +        ...          +
*           +---------------------+
*           +    Data File n-1    +
*           +++++++++++++++++++++++
*
*           n = NUM_HEADERS
*/
#define NUM_HEADERS     32
#define S_HEADER_SIZE   512
#define MAX_FILE_NAME   256

struct s_Info {
   char Type;                            // ='z'  (mypackzip file type) ('\0' Empty data)
   char Compress;                        // ='n' (default) o 'y'. 'y' if the file data is 
                                         //       stored in compressed form.

   unsigned long DataSize;               // Original file size (uncompressed) 
   unsigned long CompSize;               // Size of the compressed file. If the data is not  
                                         //      compressed, its value is the size of the   
                                         //      original file.
   char DataFileName[MAX_FILE_NAME];     // Data file name  
   unsigned long DatPosition;            // Position within mypackzip where the original file  
                                         // datais stored (DataFileName)
};

#define S_INFO_SIZE sizeof(struct s_Info)

#define DUMMY_SIZE (S_HEADER_SIZE - S_INFO_SIZE)

struct  s_Header {
   struct s_Info FileInfo;            // File Information
   char Dummy[DUMMY_SIZE];            // ToDo...  
};
 
struct  s_mypack_headers {
   struct  s_Header vHead[NUM_HEADERS];    // File Headers Vector 
};

COMPATIBILIDAD
       insertar_fichero() debería funcionar en cualquier sistema UNIX.

VEASE TAMBIEN
       mypackzip(ISO), extraer_fichero(ISO).

AUTOR
       Nombre del autor(es).

1.0                               19 Feb 2021                        man(ISO)re
